// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
  IN in[16], load, address[3];
  OUT out[16];

  PARTS:
    DMux8Way(in=load, sel=address, a=setA, b=setB, c=setC, d=setD, e=setE, f=setF, g=setG, h=setH);
    Register(in=in, load=setA, out=dataA);
    Register(in=in, load=setB, out=dataB);
    Register(in=in, load=setC, out=dataC);
    Register(in=in, load=setD, out=dataD);
    Register(in=in, load=setE, out=dataE);
    Register(in=in, load=setF, out=dataF);
    Register(in=in, load=setG, out=dataG);
    Register(in=in, load=setH, out=dataH);
    Mux8Way16(a=dataA, b=dataB, c=dataC, d=dataD, e=dataE, f=dataF, g=dataG, h=dataH, sel=address, out=out);
}